// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "MRmixr",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/checks": {
      "get": {
        "operationId": "listChecks",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Check"
              }
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "post": {
        "operationId": "createCheck",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "days": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "github_repositories": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "hour": {
                  "type": "integer"
                },
                "minute": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "tz": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PR check created",
            "schema": {
              "$ref": "#/definitions/Check"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/checks/{id}": {
      "get": {
        "operationId": "retrieveCheck",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Check"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "put": {
        "operationId": "updateCheck",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "days": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "github_repositories": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "hour": {
                  "type": "integer"
                },
                "minute": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "tz": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      },
      "delete": {
        "operationId": "deleteCheck",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/github_repositories": {
      "get": {
        "operationId": "listGithubRepositories",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GithubRepository"
              }
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    }
  },
  "definitions": {
    "Check": {
      "type": "object",
      "properties": {
        "days": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "github_repositories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GithubRepository"
          }
        },
        "hour": {
          "type": "integer"
        },
        "id": {
          "type": "integer",
          "readOnly": true
        },
        "minute": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "tz": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "description": "HTTP code",
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "GithubRepository": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      }
    }
  },
  "responses": {
    "GenericError": {
      "description": "General errors",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "MRmixr",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/checks": {
      "get": {
        "operationId": "listChecks",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Check"
              }
            }
          },
          "default": {
            "description": "General errors",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createCheck",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "days": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "github_repositories": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "hour": {
                  "type": "integer"
                },
                "minute": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "tz": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PR check created",
            "schema": {
              "$ref": "#/definitions/Check"
            }
          },
          "default": {
            "description": "General errors",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/checks/{id}": {
      "get": {
        "operationId": "retrieveCheck",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Check"
            }
          },
          "default": {
            "description": "General errors",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "updateCheck",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "days": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "github_repositories": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "hour": {
                  "type": "integer"
                },
                "minute": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "tz": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "General errors",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteCheck",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "General errors",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/github_repositories": {
      "get": {
        "operationId": "listGithubRepositories",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GithubRepository"
              }
            }
          },
          "default": {
            "description": "General errors",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Check": {
      "type": "object",
      "properties": {
        "days": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "github_repositories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GithubRepository"
          }
        },
        "hour": {
          "type": "integer"
        },
        "id": {
          "type": "integer",
          "readOnly": true
        },
        "minute": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "tz": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "description": "HTTP code",
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "GithubRepository": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      }
    }
  },
  "responses": {
    "GenericError": {
      "description": "General errors",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}`))
}
