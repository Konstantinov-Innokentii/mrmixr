// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UpdateCheckHandlerFunc turns a function with the right signature into a update check handler
type UpdateCheckHandlerFunc func(UpdateCheckParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateCheckHandlerFunc) Handle(params UpdateCheckParams) middleware.Responder {
	return fn(params)
}

// UpdateCheckHandler interface for that can handle valid update check params
type UpdateCheckHandler interface {
	Handle(UpdateCheckParams) middleware.Responder
}

// NewUpdateCheck creates a new http.Handler for the update check operation
func NewUpdateCheck(ctx *middleware.Context, handler UpdateCheckHandler) *UpdateCheck {
	return &UpdateCheck{Context: ctx, Handler: handler}
}

/* UpdateCheck swagger:route PUT /checks/{id} updateCheck

UpdateCheck update check API

*/
type UpdateCheck struct {
	Context *middleware.Context
	Handler UpdateCheckHandler
}

func (o *UpdateCheck) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewUpdateCheckParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// UpdateCheckBody update check body
//
// swagger:model UpdateCheckBody
type UpdateCheckBody struct {

	// days
	Days []int64 `json:"days"`

	// github repositories
	GithubRepositories []int64 `json:"github_repositories"`

	// hour
	Hour int64 `json:"hour,omitempty"`

	// minute
	Minute int64 `json:"minute,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// tz
	Tz string `json:"tz,omitempty"`
}

// Validate validates this update check body
func (o *UpdateCheckBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update check body based on context it is used
func (o *UpdateCheckBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateCheckBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateCheckBody) UnmarshalBinary(b []byte) error {
	var res UpdateCheckBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
